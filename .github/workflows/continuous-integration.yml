# https://help.github.com/en/categories/automating-your-workflow-with-github-actions

name: "CI"

on:
  pull_request:
  push:
    branches:
      - "main"

jobs:

  coding-standards:
    name: "Coding Standards"

    runs-on: ${{ matrix.operating-system }}

    strategy:
      fail-fast: true
      matrix:
        dependencies:
          - "locked"
        php-version:
          - "7.4"
        operating-system:
          - "ubuntu-latest"

    steps:
      - name: "Checkout"
        uses: "actions/checkout@v2"

      - name: "Install PHP"
        uses: "shivammathur/setup-php@v2"
        with:
          php-version: "${{ matrix.php-version }}"
          coverage: "none"
          ini-values: "memory_limit=-1"
          tools: "composer:v2"

      - name: "Get Composer cache directory"
        id: composercache
        run: echo "::set-output name=dir::$(composer config cache-files-dir)"

      - name: "Cache dependencies"
        uses: "actions/cache@v2"
        with:
          path: ${{ steps.composercache.outputs.dir }}
          # Use composer.json for key, if composer.lock is not committed.
          # key: "${{ runner.os }}-php-${{ matrix.php-version }}-composer-${{ matrix.dependencies }}-${{ matrix.composer-options }}-${{ hashFiles('**/composer.json') }}"
          key: "${{ runner.os }}-php-${{ matrix.php-version }}-composer-${{ matrix.dependencies }}-${{ matrix.composer-options }}-${{ hashFiles('**/composer.lock') }}"
          restore-keys: "${{ runner.os }}-php-${{ matrix.php-version }}-composer-${{ matrix.dependencies }}-${{ matrix.composer-options }}-"

      - name: "Install lowest dependencies"
        if: ${{ matrix.dependencies == 'lowest' }}
        run: "composer update --prefer-lowest --no-interaction --no-progress ${{ matrix.composer-options }}"

      - name: "Install highest dependencies"
        if: ${{ matrix.dependencies == 'highest' }}
        run: "composer update --no-interaction --no-progress ${{ matrix.composer-options }}"

      - name: "Install locked dependencies"
        if: ${{ matrix.dependencies == 'locked' }}
        run: "composer install --no-interaction --no-progress ${{ matrix.composer-options }}"

      - name: "Coding Standards"
        run: "bin/devtools lint"

  static-analysis:
    name: "Static Analysis"

    runs-on: ${{ matrix.operating-system }}

    strategy:
      fail-fast: true
      matrix:
        dependencies:
          - "locked"
        php-version:
          - "7.4"
        operating-system:
          - "ubuntu-latest"

    steps:
      - name: "Checkout"
        uses: "actions/checkout@v2"

      - name: "Install PHP"
        uses: "shivammathur/setup-php@v2"
        with:
          php-version: "${{ matrix.php-version }}"
          coverage: "none"
          ini-values: "memory_limit=-1"
          tools: "composer:v2"

      - name: "Get Composer cache directory"
        id: composercache
        run: echo "::set-output name=dir::$(composer config cache-files-dir)"

      - name: "Cache dependencies"
        uses: "actions/cache@v2"
        with:
          path: ${{ steps.composercache.outputs.dir }}
          # Use composer.json for key, if composer.lock is not committed.
          # key: "${{ runner.os }}-php-${{ matrix.php-version }}-composer-${{ matrix.dependencies }}-${{ matrix.composer-options }}-${{ hashFiles('**/composer.json') }}"
          key: "${{ runner.os }}-php-${{ matrix.php-version }}-composer-${{ matrix.dependencies }}-${{ matrix.composer-options }}-${{ hashFiles('**/composer.lock') }}"
          restore-keys: "${{ runner.os }}-php-${{ matrix.php-version }}-composer-${{ matrix.dependencies }}-${{ matrix.composer-options }}-"

      - name: "Install lowest dependencies"
        if: ${{ matrix.dependencies == 'lowest' }}
        run: "composer update --prefer-lowest --no-interaction --no-progress ${{ matrix.composer-options }}"

      - name: "Install highest dependencies"
        if: ${{ matrix.dependencies == 'highest' }}
        run: "composer update --no-interaction --no-progress ${{ matrix.composer-options }}"

      - name: "Install locked dependencies"
        if: ${{ matrix.dependencies == 'locked' }}
        run: "composer install --no-interaction --no-progress ${{ matrix.composer-options }}"

      - name: "PHPStan"
        run: "bin/devtools analyze:phpstan"

      - name: "Psalm"
        run: "bin/devtools analyze:psalm -- --shepherd"

  unit-tests:
    name: "Unit Tests"

    runs-on: ${{ matrix.operating-system }}

    strategy:
      fail-fast: false
      matrix:
        dependencies:
          - "lowest"
          - "highest"
        php-version:
          - "7.4"
          - "8.0"
        operating-system:
          - "ubuntu-latest"
          - "windows-latest"
        include:
          - php: "8.0"
            composer-options: "--ignore-platform-reqs"

    steps:
      - name: "Configure Git"
        if: ${{ matrix.operating-system == 'windows-latest' }}
        run: |
          git config --system core.autocrlf false
          git config --system core.eol lf

      - name: "Checkout"
        uses: "actions/checkout@v2"

      - name: "Install PHP"
        uses: "shivammathur/setup-php@v2"
        with:
          php-version: "${{ matrix.php-version }}"
          coverage: "pcov"
          ini-values: "memory_limit=-1"
          tools: "composer:v2"

      - name: "Get Composer cache directory"
        id: composercache
        run: echo "::set-output name=dir::$(composer config cache-files-dir)"

      - name: "Cache dependencies"
        uses: "actions/cache@v2"
        with:
          path: ${{ steps.composercache.outputs.dir }}
          # Use composer.json for key, if composer.lock is not committed.
          # key: "${{ runner.os }}-php-${{ matrix.php-version }}-composer-${{ matrix.dependencies }}-${{ matrix.composer-options }}-${{ hashFiles('**/composer.json') }}"
          key: "${{ runner.os }}-php-${{ matrix.php-version }}-composer-${{ matrix.dependencies }}-${{ matrix.composer-options }}-${{ hashFiles('**/composer.lock') }}"
          restore-keys: "${{ runner.os }}-php-${{ matrix.php-version }}-composer-${{ matrix.dependencies }}-${{ matrix.composer-options }}-"

      - name: "Install lowest dependencies"
        if: ${{ matrix.dependencies == 'lowest' }}
        run: "composer update --prefer-lowest --no-interaction --no-progress ${{ matrix.composer-options }}"

      - name: "Install highest dependencies"
        if: ${{ matrix.dependencies == 'highest' }}
        run: "composer update --no-interaction --no-progress ${{ matrix.composer-options }}"

      - name: "Install locked dependencies"
        if: ${{ matrix.dependencies == 'locked' }}
        run: "composer install --no-interaction --no-progress ${{ matrix.composer-options }}"

      - name: "Unit Tests"
        run: "bin/devtools test:coverage:ci -- --coverage-text"

      - name: "Publish Coverage Report to Codecov"
        uses: "codecov/codecov-action@v1"
